{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nexport const apiColors = createAsyncThunk(\"sizesSlice/apiColors\", async () => {\n  const res = await fetch(\"http://localhost:3000/colors\");\n  const data = await res.json();\n  return data;\n});\nexport const insertColor = createAsyncThunk(\"colorsSlice/insertColor\", async (colorName, thunkApi) => {\n  const {\n    rejectWithValue\n  } = thunkApi;\n  try {\n    const res = await fetch(\"http://localhost:3000/colors\", {\n      method: \"POST\",\n      body: JSON.stringify(colorName),\n      headers: {\n        \"Content-type\": \"application/json; charset=utf-8\"\n      }\n    });\n    const data = await res.json();\n    return data;\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\nexport const updateColor = createAsyncThunk(\"colorsSlice/updateColor\", async (colorName, thunkApi) => {\n  const {\n    rejectWithValue\n  } = thunkApi;\n  try {\n    const res = await fetch(`http://localhost:3000/colors/${colorName.id}`, {\n      method: \"PUT\",\n      body: JSON.stringify(colorName),\n      headers: {\n        \"Content-type\": \"application/json; charset=utf-8\"\n      }\n    });\n    const data = await res.json();\n    return data;\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\nexport const deleteColor = createAsyncThunk(\"colorsSlice/deleteColor\", async (colorName, thunkApi) => {\n  const {\n    rejectWithValue\n  } = thunkApi;\n  console.log(colorName);\n  try {\n    await fetch(`http://localhost:3000/colors/${colorName.id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-type\": \"application/json; charset=utf-8\"\n      }\n    });\n    return colorName;\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\nconst colorsSlice = createSlice({\n  name: \"colorsSlice\",\n  initialState: {\n    colors: []\n  },\n  reducers: {\n    GET_COLORS: (state, action) => {\n      state.colors = action.payload;\n    },\n    ADD_COLOR: (state, action) => {\n      state.colors.push(...action.payload);\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(apiColors.fulfilled, (state, action) => {\n      return action.payload;\n    });\n    builder.addCase(insertColor.fulfilled, (state, action) => {\n      state.push(action.payload);\n    });\n    builder.addCase(deleteColor.fulfilled, (state, action) => {\n      return state = state.filter(color => color.id !== action.payload.id);\n    });\n    builder.addCase(updateColor.fulfilled, (state, action) => {\n      const {\n        id,\n        colorName,\n        elementState\n      } = action.payload;\n      const updateState = state.find(color => color.id === id);\n      if (updateState) {\n        updateState.colorName = colorName;\n        updateState.elementState = elementState;\n      }\n    });\n  }\n});\nexport const {\n  GET_COLORS,\n  ADD_COLOR\n} = colorsSlice.actions;\nexport default colorsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","apiColors","res","fetch","data","json","insertColor","colorName","thunkApi","rejectWithValue","method","body","JSON","stringify","headers","error","message","updateColor","id","deleteColor","console","log","colorsSlice","name","initialState","colors","reducers","GET_COLORS","state","action","payload","ADD_COLOR","push","extraReducers","builder","addCase","fulfilled","filter","color","elementState","updateState","find","actions","reducer"],"sources":["C:/Users/MohannadDiwan/Desktop/E-commerce/diwan-shop/src/rtk/slices/colorsSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nexport const apiColors = createAsyncThunk(\"sizesSlice/apiColors\", async () => {\r\n  const res = await fetch(\"http://localhost:3000/colors\");\r\n  const data = await res.json();\r\n  return data;\r\n});\r\n\r\nexport const insertColor = createAsyncThunk(\r\n  \"colorsSlice/insertColor\",\r\n  async (colorName, thunkApi) => {\r\n    const { rejectWithValue } = thunkApi;\r\n    try {\r\n      const res = await fetch(\"http://localhost:3000/colors\", {\r\n        method: \"POST\",\r\n\r\n        body: JSON.stringify(colorName),\r\n\r\n        headers: { \"Content-type\": \"application/json; charset=utf-8\" },\r\n      });\r\n\r\n      const data = await res.json();\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\nexport const updateColor = createAsyncThunk(\r\n  \"colorsSlice/updateColor\",\r\n  async (colorName, thunkApi) => {\r\n    const { rejectWithValue } = thunkApi;\r\n    try {\r\n      const res = await fetch(`http://localhost:3000/colors/${colorName.id}`, {\r\n        method: \"PUT\",\r\n\r\n        body: JSON.stringify(colorName),\r\n\r\n        headers: { \"Content-type\": \"application/json; charset=utf-8\" },\r\n      });\r\n      const data = await res.json();\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\nexport const deleteColor = createAsyncThunk(\r\n  \"colorsSlice/deleteColor\",\r\n  async (colorName, thunkApi) => {\r\n    const { rejectWithValue } = thunkApi;\r\n    console.log(colorName);\r\n    try {\r\n      await fetch(`http://localhost:3000/colors/${colorName.id}`, {\r\n        method: \"DELETE\",\r\n\r\n        headers: { \"Content-type\": \"application/json; charset=utf-8\" },\r\n      });\r\n      return colorName;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\nconst colorsSlice = createSlice({\r\n  name: \"colorsSlice\",\r\n  initialState: { colors: [] },\r\n  reducers: {\r\n    GET_COLORS: (state, action) => {\r\n      state.colors = action.payload;\r\n    },\r\n    ADD_COLOR: (state, action) => {\r\n      state.colors.push(...action.payload);\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(apiColors.fulfilled, (state, action) => {\r\n      return action.payload;\r\n    });\r\n    builder.addCase(insertColor.fulfilled, (state, action) => {\r\n      state.push(action.payload);\r\n    });\r\n    builder.addCase(deleteColor.fulfilled, (state, action) => {\r\n      return (state = state.filter((color) => color.id !== action.payload.id));\r\n    });\r\n\r\n    builder.addCase(updateColor.fulfilled, (state, action) => {\r\n      const { id, colorName, elementState } = action.payload;\r\n      const updateState = state.find((color) => color.id === id);\r\n      if (updateState) {\r\n        updateState.colorName = colorName;\r\n        updateState.elementState = elementState;\r\n      }\r\n    });\r\n  },\r\n});\r\n\r\nexport const { GET_COLORS, ADD_COLOR } = colorsSlice.actions;\r\nexport default colorsSlice.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}