{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nexport const api = createAsyncThunk(\"categoriesSlice/api\", async () => {\n  const res = await fetch(\"http://localhost:3000/categories\");\n  const data = await res.json();\n  return data;\n});\nexport const insertCategory = createAsyncThunk(\"categoriesSlice/api\", async (categoryName, thunkApi) => {\n  const {\n    rejectWithValue\n  } = thunkApi;\n  const res = await fetch(\"http://localhost:3000/categories\", {\n    method: \"POST\",\n    body: JSON.stringify(categoryName),\n    headers: {\n      \"Content-type\": \"application/json; charset=utf-8\"\n    }\n  });\n  const data = await res.json();\n  return data;\n});\nconst categoriesSlice = createSlice({\n  name: \"categoriesSlice\",\n  initialState: [],\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(api.fulfilled, (state, action) => {\n      return action.payload;\n    });\n    builder.addCase(insertCategory.fulfilled, (state, action) => {\n      return action.payload;\n    });\n  }\n});\n\n// export const {} = categoriesSlice.actions;\nexport default categoriesSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","api","res","fetch","data","json","insertCategory","categoryName","thunkApi","rejectWithValue","method","body","JSON","stringify","headers","categoriesSlice","name","initialState","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","reducer"],"sources":["C:/Users/MohannadDiwan/Desktop/E-commerce/diwan-shop/src/rtk/slices/categoriesSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nexport const api = createAsyncThunk(\"categoriesSlice/api\", async () => {\r\n  const res = await fetch(\"http://localhost:3000/categories\");\r\n  const data = await res.json();\r\n  return data;\r\n});\r\n\r\nexport const insertCategory = createAsyncThunk(\r\n  \"categoriesSlice/api\",\r\n  async (categoryName, thunkApi) => {\r\n    const { rejectWithValue } = thunkApi;\r\n    const res = await fetch(\"http://localhost:3000/categories\", {\r\n      method: \"POST\",\r\n\r\n      body: JSON.stringify(categoryName),\r\n\r\n      headers: { \"Content-type\": \"application/json; charset=utf-8\" },\r\n    });\r\n\r\n    const data = await res.json();\r\n    return data;\r\n  }\r\n);\r\nconst categoriesSlice = createSlice({\r\n  name: \"categoriesSlice\",\r\n  initialState: [],\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder.addCase(api.fulfilled, (state, action) => {\r\n      return action.payload;\r\n    });\r\n    builder.addCase(insertCategory.fulfilled, (state, action) => {\r\n      return action.payload;\r\n    });\r\n  },\r\n});\r\n\r\n// export const {} = categoriesSlice.actions;\r\nexport default categoriesSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAO,MAAMC,GAAG,GAAGD,gBAAgB,CAAC,qBAAqB,EAAE,YAAY;EACrE,MAAME,GAAG,GAAG,MAAMC,KAAK,CAAC,kCAAkC,CAAC;EAC3D,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,EAAE;EAC7B,OAAOD,IAAI;AACb,CAAC,CAAC;AAEF,OAAO,MAAME,cAAc,GAAGN,gBAAgB,CAC5C,qBAAqB,EACrB,OAAOO,YAAY,EAAEC,QAAQ,KAAK;EAChC,MAAM;IAAEC;EAAgB,CAAC,GAAGD,QAAQ;EACpC,MAAMN,GAAG,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;IAC1DO,MAAM,EAAE,MAAM;IAEdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,YAAY,CAAC;IAElCO,OAAO,EAAE;MAAE,cAAc,EAAE;IAAkC;EAC/D,CAAC,CAAC;EAEF,MAAMV,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,EAAE;EAC7B,OAAOD,IAAI;AACb,CAAC,CACF;AACD,MAAMW,eAAe,GAAGhB,WAAW,CAAC;EAClCiB,IAAI,EAAE,iBAAiB;EACvBC,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAACpB,GAAG,CAACqB,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAChD,OAAOA,MAAM,CAACC,OAAO;IACvB,CAAC,CAAC;IACFL,OAAO,CAACC,OAAO,CAACf,cAAc,CAACgB,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC3D,OAAOA,MAAM,CAACC,OAAO;IACvB,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;;AAEF;AACA,eAAeV,eAAe,CAACW,OAAO"},"metadata":{},"sourceType":"module"}