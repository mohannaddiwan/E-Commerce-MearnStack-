{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MohannadDiwan\\\\Desktop\\\\E-commerce\\\\diwan-shop\\\\src\\\\component\\\\update\\\\UpdateProduct.js\";\nimport Button from \"react-bootstrap/Button\";\nimport { useSelector } from \"react-redux\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport Form from \"react-bootstrap/Form\";\nimport { useEffect, useState } from \"react\";\nimport { UPDATE_PRODUCT } from \"../../rtk/slices/productsSlice\";\nimport axios from \"axios\";\nimport { useDispatch } from \"react-redux\";\nimport { useAppContext } from \"../../context/appContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UpdatePro() {\n  // const params = useParams();\n  // const dispatch = useDispatch();\n  // const { UpdateItem } = useAppContext();\n  // const { sizes } = useSelector((state) => state.sizes);\n  // const { products } = useSelector((state) => state.products);\n  // const { colors } = useSelector((state) => state.colors);\n  // const navigate = useNavigate();\n  // const { categories } = useSelector((state) => state.categories);\n  // console.log(products);\n  // const [value, setValue] = useState(\"\");\n  // console.log(value.sizeList);\n  // const handleImage = (e) => {\n  //   const image = e.target.files[0].name;\n  //   const array = image.forEach((element) => {\n  //     array.push(element.name);\n  //   });\n\n  //   setValue({ ...value, image: array });\n  // };\n  // console.log(\"d\");\n  // useEffect(() => {\n  //   (async () => {\n  //     const res = await axios.get(`/dashboard/MangeProducts/${products._id}`);\n  //     console.log(res);\n  //     setValue(res.data.product);\n  //     // getsize();\n  //   })();\n  // }, []);\n  // const setSize = (itemName, state) => {\n  //   let list = [];\n  //   console.log(state);\n  //   console.log(itemName);\n  //   if (state) {\n  //     list = value.sizeList;\n  //     list.push(itemName);\n  //     setValue({ ...value, sizeList: list });\n  //   } else {\n  //     list = value.sizeList.filter((item) => itemName !== item);\n  //     setValue({ ...value, sizeList: list });\n  //   }\n  // };\n  // const setColor = (itemName, state) => {\n  //   let list = [];\n  //   if (state) {\n  //     list = value.colorList;\n  //     list.push(itemName);\n  //     setValue({ ...value, colorList: list });\n  //   } else {\n  //     list = value.colorList.filter((item) => itemName !== item);\n  //     setValue({ ...value, colorList: list });\n  //   }\n  // };\n  // const HandleUpdate = (e) => {\n  //   e.preventDefault();\n  //   UpdateItem(value);\n  // };\n  // console.log(value);  // const params = useParams();\n  // const dispatch = useDispatch();\n  // const { UpdateItem } = useAppContext();\n  // const { sizes } = useSelector((state) => state.sizes);\n  // const { products } = useSelector((state) => state.products);\n  // const { colors } = useSelector((state) => state.colors);\n  // const navigate = useNavigate();\n  // const { categories } = useSelector((state) => state.categories);\n  // console.log(products);\n  // const [value, setValue] = useState(\"\");\n  // console.log(value.sizeList);\n  // const handleImage = (e) => {\n  //   const image = e.target.files[0].name;\n  //   const array = image.forEach((element) => {\n  //     array.push(element.name);\n  //   });\n\n  //   setValue({ ...value, image: array });\n  // };\n  // console.log(\"d\");\n  // useEffect(() => {\n  //   (async () => {\n  //     const res = await axios.get(`/dashboard/MangeProducts/${products._id}`);\n  //     console.log(res);\n  //     setValue(res.data.product);\n  //     // getsize();\n  //   })();\n  // }, []);\n  // const setSize = (itemName, state) => {\n  //   let list = [];\n  //   console.log(state);\n  //   console.log(itemName);\n  //   if (state) {\n  //     list = value.sizeList;\n  //     list.push(itemName);\n  //     setValue({ ...value, sizeList: list });\n  //   } else {\n  //     list = value.sizeList.filter((item) => itemName !== item);\n  //     setValue({ ...value, sizeList: list });\n  //   }\n  // };\n  // const setColor = (itemName, state) => {\n  //   let list = [];\n  //   if (state) {\n  //     list = value.colorList;\n  //     list.push(itemName);\n  //     setValue({ ...value, colorList: list });\n  //   } else {\n  //     list = value.colorList.filter((item) => itemName !== item);\n  //     setValue({ ...value, colorList: list });\n  //   }\n  // };\n  // const HandleUpdate = (e) => {\n  //   e.preventDefault();\n  //   UpdateItem(value);\n  // };\n  console.log(\"value\");\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"df\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this)\n  // <div className=\"editForm\">\n  //   {value && (\n  //     <Form onSubmit={HandleUpdate}>\n  //       <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n  //         <Form.Label>Name</Form.Label>\n  //         <Form.Control\n  //           type=\"text\"\n  //           value={value.name}\n  //           onChange={(e) => setValue({ ...value, name: e.target.value })}\n  //         />\n  //       </Form.Group>\n  //       <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n  //         <Form.Label>Description</Form.Label>\n  //         <Form.Control\n  //           type=\"text\"\n  //           value={value.description}\n  //           onChange={(e) =>\n  //             setValue({ ...value, description: e.target.value })\n  //           }\n  //         />\n  //       </Form.Group>\n  //       <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n  //         <Form.Label>Price</Form.Label>\n  //         <Form.Control\n  //           type=\"text\"\n  //           value={value.price}\n  //           onChange={(e) => setValue({ ...value, price: e.target.value })}\n  //         />\n  //       </Form.Group>\n  //       <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n  //         <select\n  //           className=\"input-select m-2\"\n  //           onClick={(e) =>\n  //             setValue({ ...value, categories: e.target.value })\n  //           }\n  //         >\n  //           {categories.map((category) => (\n  //             <option\n  //               value={category.categoryName}\n  //               selected={\n  //                 value.categories.filter(\n  //                   (i) => i === category.categoryName\n  //                 )[0] === category.categoryName\n  //                   ? true\n  //                   : false\n  //               }\n  //             >\n  //               {category.categoryName}\n  //             </option>\n  //           ))}\n  //         </select>\n  //       </Form.Group>\n  //       <div className=\"row\">\n  //         <div className=\"col-md-6\">\n  //           <h5>Sizes</h5>\n  //           {sizes.map((size) => (\n  //             <Form.Group className=\"form-check form-switch\">\n  //               <Form.Check\n  //                 className=\"mb-3\"\n  //                 type=\"checkbox\"\n  //                 id=\"custom-switch\"\n  //                 name={size.sizeName}\n  //                 label={size.sizeName}\n  //                 checked={\n  //                   value.sizeList.filter((i) => i === size.sizeName)[0] ===\n  //                   size.sizeName\n  //                     ? true\n  //                     : false\n  //                 }\n  //                 onChange={(e) => {\n  //                   setSize(e.target.name, e.target.checked);\n  //                 }}\n  //               />\n  //             </Form.Group>\n  //           ))}\n  //         </div>\n  //         <div className=\"col-md-6\">\n  //           <h5>Colors</h5>\n  //           {colors.map((color) => (\n  //             <Form.Group className=\"form-check form-switch\">\n  //               <Form.Check\n  //                 className=\"mb-3\"\n  //                 type=\"checkbox\"\n  //                 id=\"custom-switch\"\n  //                 name={color.colorName}\n  //                 label={color.colorName}\n  //                 checked={\n  //                   value.sizeList.filter((i) => i === color.colorName)[0] ===\n  //                   color.colorName\n  //                     ? true\n  //                     : false\n  //                 }\n  //                 onChange={(e) => {\n  //                   setSize(e.target.name, e.target.checked);\n  //                 }}\n  //               />\n  //             </Form.Group>\n  //           ))}\n  //         </div>\n  //       </div>\n  //       <h5>State</h5>\n  //       <div className=\"mb-3 form-check form-switch\">\n  //         <label>Active</label>\n  //         <input\n  //           type=\"checkbox\"\n  //           id=\"custom-switch\"\n  //           label=\"Active\"\n  //           className=\"form-check-input\"\n  //           checked={value.elementState === true ? true : false}\n  //           onChange={(e) =>\n  //             setValue({ ...value, elementState: !value.elementState })\n  //           }\n  //         />\n  //       </div>\n  //       <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n  //         <Form.Label>Image</Form.Label>\n  //         <Form.Control\n  //           multiple\n  //           type=\"file\"\n  //           className=\"form-control\"\n  //           onChange={(e) => handleImage(e)}\n  //         />\n  //       </Form.Group>\n\n  //       <Button type=\"submit\" variant=\"primary\">\n  //         Submit\n  //       </Button>\n  //     </Form>\n  //   )}\n  // </div>\n  ;\n}\n_c = UpdatePro;\nexport default UpdatePro;\nvar _c;\n$RefreshReg$(_c, \"UpdatePro\");","map":{"version":3,"names":["Button","useSelector","useParams","useNavigate","Form","useEffect","useState","UPDATE_PRODUCT","axios","useDispatch","useAppContext","UpdatePro","console","log"],"sources":["C:/Users/MohannadDiwan/Desktop/E-commerce/diwan-shop/src/component/update/UpdateProduct.js"],"sourcesContent":["import Button from \"react-bootstrap/Button\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { UPDATE_PRODUCT } from \"../../rtk/slices/productsSlice\";\r\nimport axios from \"axios\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useAppContext } from \"../../context/appContext\";\r\n\r\nfunction UpdatePro() {\r\n  // const params = useParams();\r\n  // const dispatch = useDispatch();\r\n  // const { UpdateItem } = useAppContext();\r\n  // const { sizes } = useSelector((state) => state.sizes);\r\n  // const { products } = useSelector((state) => state.products);\r\n  // const { colors } = useSelector((state) => state.colors);\r\n  // const navigate = useNavigate();\r\n  // const { categories } = useSelector((state) => state.categories);\r\n  // console.log(products);\r\n  // const [value, setValue] = useState(\"\");\r\n  // console.log(value.sizeList);\r\n  // const handleImage = (e) => {\r\n  //   const image = e.target.files[0].name;\r\n  //   const array = image.forEach((element) => {\r\n  //     array.push(element.name);\r\n  //   });\r\n\r\n  //   setValue({ ...value, image: array });\r\n  // };\r\n  // console.log(\"d\");\r\n  // useEffect(() => {\r\n  //   (async () => {\r\n  //     const res = await axios.get(`/dashboard/MangeProducts/${products._id}`);\r\n  //     console.log(res);\r\n  //     setValue(res.data.product);\r\n  //     // getsize();\r\n  //   })();\r\n  // }, []);\r\n  // const setSize = (itemName, state) => {\r\n  //   let list = [];\r\n  //   console.log(state);\r\n  //   console.log(itemName);\r\n  //   if (state) {\r\n  //     list = value.sizeList;\r\n  //     list.push(itemName);\r\n  //     setValue({ ...value, sizeList: list });\r\n  //   } else {\r\n  //     list = value.sizeList.filter((item) => itemName !== item);\r\n  //     setValue({ ...value, sizeList: list });\r\n  //   }\r\n  // };\r\n  // const setColor = (itemName, state) => {\r\n  //   let list = [];\r\n  //   if (state) {\r\n  //     list = value.colorList;\r\n  //     list.push(itemName);\r\n  //     setValue({ ...value, colorList: list });\r\n  //   } else {\r\n  //     list = value.colorList.filter((item) => itemName !== item);\r\n  //     setValue({ ...value, colorList: list });\r\n  //   }\r\n  // };\r\n  // const HandleUpdate = (e) => {\r\n  //   e.preventDefault();\r\n  //   UpdateItem(value);\r\n  // };\r\n  // console.log(value);  // const params = useParams();\r\n  // const dispatch = useDispatch();\r\n  // const { UpdateItem } = useAppContext();\r\n  // const { sizes } = useSelector((state) => state.sizes);\r\n  // const { products } = useSelector((state) => state.products);\r\n  // const { colors } = useSelector((state) => state.colors);\r\n  // const navigate = useNavigate();\r\n  // const { categories } = useSelector((state) => state.categories);\r\n  // console.log(products);\r\n  // const [value, setValue] = useState(\"\");\r\n  // console.log(value.sizeList);\r\n  // const handleImage = (e) => {\r\n  //   const image = e.target.files[0].name;\r\n  //   const array = image.forEach((element) => {\r\n  //     array.push(element.name);\r\n  //   });\r\n\r\n  //   setValue({ ...value, image: array });\r\n  // };\r\n  // console.log(\"d\");\r\n  // useEffect(() => {\r\n  //   (async () => {\r\n  //     const res = await axios.get(`/dashboard/MangeProducts/${products._id}`);\r\n  //     console.log(res);\r\n  //     setValue(res.data.product);\r\n  //     // getsize();\r\n  //   })();\r\n  // }, []);\r\n  // const setSize = (itemName, state) => {\r\n  //   let list = [];\r\n  //   console.log(state);\r\n  //   console.log(itemName);\r\n  //   if (state) {\r\n  //     list = value.sizeList;\r\n  //     list.push(itemName);\r\n  //     setValue({ ...value, sizeList: list });\r\n  //   } else {\r\n  //     list = value.sizeList.filter((item) => itemName !== item);\r\n  //     setValue({ ...value, sizeList: list });\r\n  //   }\r\n  // };\r\n  // const setColor = (itemName, state) => {\r\n  //   let list = [];\r\n  //   if (state) {\r\n  //     list = value.colorList;\r\n  //     list.push(itemName);\r\n  //     setValue({ ...value, colorList: list });\r\n  //   } else {\r\n  //     list = value.colorList.filter((item) => itemName !== item);\r\n  //     setValue({ ...value, colorList: list });\r\n  //   }\r\n  // };\r\n  // const HandleUpdate = (e) => {\r\n  //   e.preventDefault();\r\n  //   UpdateItem(value);\r\n  // };\r\n  console.log(\"value\");\r\n  return (\r\n    <h1>df</h1>\r\n    // <div className=\"editForm\">\r\n    //   {value && (\r\n    //     <Form onSubmit={HandleUpdate}>\r\n    //       <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n    //         <Form.Label>Name</Form.Label>\r\n    //         <Form.Control\r\n    //           type=\"text\"\r\n    //           value={value.name}\r\n    //           onChange={(e) => setValue({ ...value, name: e.target.value })}\r\n    //         />\r\n    //       </Form.Group>\r\n    //       <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n    //         <Form.Label>Description</Form.Label>\r\n    //         <Form.Control\r\n    //           type=\"text\"\r\n    //           value={value.description}\r\n    //           onChange={(e) =>\r\n    //             setValue({ ...value, description: e.target.value })\r\n    //           }\r\n    //         />\r\n    //       </Form.Group>\r\n    //       <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n    //         <Form.Label>Price</Form.Label>\r\n    //         <Form.Control\r\n    //           type=\"text\"\r\n    //           value={value.price}\r\n    //           onChange={(e) => setValue({ ...value, price: e.target.value })}\r\n    //         />\r\n    //       </Form.Group>\r\n    //       <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n    //         <select\r\n    //           className=\"input-select m-2\"\r\n    //           onClick={(e) =>\r\n    //             setValue({ ...value, categories: e.target.value })\r\n    //           }\r\n    //         >\r\n    //           {categories.map((category) => (\r\n    //             <option\r\n    //               value={category.categoryName}\r\n    //               selected={\r\n    //                 value.categories.filter(\r\n    //                   (i) => i === category.categoryName\r\n    //                 )[0] === category.categoryName\r\n    //                   ? true\r\n    //                   : false\r\n    //               }\r\n    //             >\r\n    //               {category.categoryName}\r\n    //             </option>\r\n    //           ))}\r\n    //         </select>\r\n    //       </Form.Group>\r\n    //       <div className=\"row\">\r\n    //         <div className=\"col-md-6\">\r\n    //           <h5>Sizes</h5>\r\n    //           {sizes.map((size) => (\r\n    //             <Form.Group className=\"form-check form-switch\">\r\n    //               <Form.Check\r\n    //                 className=\"mb-3\"\r\n    //                 type=\"checkbox\"\r\n    //                 id=\"custom-switch\"\r\n    //                 name={size.sizeName}\r\n    //                 label={size.sizeName}\r\n    //                 checked={\r\n    //                   value.sizeList.filter((i) => i === size.sizeName)[0] ===\r\n    //                   size.sizeName\r\n    //                     ? true\r\n    //                     : false\r\n    //                 }\r\n    //                 onChange={(e) => {\r\n    //                   setSize(e.target.name, e.target.checked);\r\n    //                 }}\r\n    //               />\r\n    //             </Form.Group>\r\n    //           ))}\r\n    //         </div>\r\n    //         <div className=\"col-md-6\">\r\n    //           <h5>Colors</h5>\r\n    //           {colors.map((color) => (\r\n    //             <Form.Group className=\"form-check form-switch\">\r\n    //               <Form.Check\r\n    //                 className=\"mb-3\"\r\n    //                 type=\"checkbox\"\r\n    //                 id=\"custom-switch\"\r\n    //                 name={color.colorName}\r\n    //                 label={color.colorName}\r\n    //                 checked={\r\n    //                   value.sizeList.filter((i) => i === color.colorName)[0] ===\r\n    //                   color.colorName\r\n    //                     ? true\r\n    //                     : false\r\n    //                 }\r\n    //                 onChange={(e) => {\r\n    //                   setSize(e.target.name, e.target.checked);\r\n    //                 }}\r\n    //               />\r\n    //             </Form.Group>\r\n    //           ))}\r\n    //         </div>\r\n    //       </div>\r\n    //       <h5>State</h5>\r\n    //       <div className=\"mb-3 form-check form-switch\">\r\n    //         <label>Active</label>\r\n    //         <input\r\n    //           type=\"checkbox\"\r\n    //           id=\"custom-switch\"\r\n    //           label=\"Active\"\r\n    //           className=\"form-check-input\"\r\n    //           checked={value.elementState === true ? true : false}\r\n    //           onChange={(e) =>\r\n    //             setValue({ ...value, elementState: !value.elementState })\r\n    //           }\r\n    //         />\r\n    //       </div>\r\n    //       <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n    //         <Form.Label>Image</Form.Label>\r\n    //         <Form.Control\r\n    //           multiple\r\n    //           type=\"file\"\r\n    //           className=\"form-control\"\r\n    //           onChange={(e) => handleImage(e)}\r\n    //         />\r\n    //       </Form.Group>\r\n\r\n    //       <Button type=\"submit\" variant=\"primary\">\r\n    //         Submit\r\n    //       </Button>\r\n    //     </Form>\r\n    //   )}\r\n    // </div>\r\n  );\r\n}\r\n\r\nexport default UpdatePro;\r\n"],"mappings":";AAAA,OAAOA,MAAM,MAAM,wBAAwB;AAC3C,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,OAAOC,IAAI,MAAM,sBAAsB;AACvC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,cAAc,QAAQ,gCAAgC;AAC/D,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,aAAa,QAAQ,0BAA0B;AAAC;AAEzD,SAASC,SAAS,GAAG;EACnpB,ovPQF,SAAS;AAyPlB,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module"}