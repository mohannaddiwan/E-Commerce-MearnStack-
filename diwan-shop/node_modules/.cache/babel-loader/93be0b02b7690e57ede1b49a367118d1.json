{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nexport const apiSizes = createAsyncThunk(\"sizesSlice/apiSizes\", async () => {\n  const res = await fetch(\"http://localhost:3000/sizes\");\n  const data = await res.json();\n  return data;\n});\nexport const insertSize = createAsyncThunk(\"sizesSlice/insertSize\", async (sizeName, thunkApi) => {\n  const {\n    rejectWithValue\n  } = thunkApi;\n  try {\n    const res = await fetch(\"http://localhost:3000/sizes\", {\n      method: \"POST\",\n      body: JSON.stringify(sizeName),\n      headers: {\n        \"Content-type\": \"application/json; charset=utf-8\"\n      }\n    });\n    const data = await res.json();\n    return data;\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\nexport const updateSize = createAsyncThunk(\"sizesSlice/updateSize\", async (sizeName, thunkApi) => {\n  const {\n    rejectWithValue\n  } = thunkApi;\n  try {\n    const res = await fetch(`http://localhost:3000/sizes/${sizeName.id}`, {\n      method: \"PUT\",\n      body: JSON.stringify(sizeName),\n      headers: {\n        \"Content-type\": \"application/json; charset=utf-8\"\n      }\n    });\n    const data = await res.json();\n    return data;\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\nexport const deleteSize = createAsyncThunk(\"sizesSlice/deleteSize\", async (sizeName, thunkApi) => {\n  const {\n    rejectWithValue\n  } = thunkApi;\n  console.log(sizeName);\n  try {\n    await fetch(`http://localhost:3000/sizes/${sizeName.id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-type\": \"application/json; charset=utf-8\"\n      }\n    });\n    return sizeName;\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\nconst sizesSlice = createSlice({\n  name: \"sizesSlice\",\n  initialState: {\n    sizes: []\n  },\n  reducers: {\n    GET_SIZES: (state, action) => {\n      state.sizes = action.payload;\n    },\n    ADD_SIZE: (state, action) => {\n      state.sizes.push(...action.payload);\n    },\n    DELETE_SIZE: (state, action) => {\n      state.deletedSize = true;\n      state.sizes.filter(el => el._id !== action.payload);\n    },\n    DELETE_RESET_SIZE: (state, action) => {\n      state.deletedSize = null;\n    }\n  }\n});\nexport const {\n  GET_SIZES,\n  ADD_SIZE,\n  DELETE_SIZE,\n  DELETE_RESET_SIZE\n} = sizesSlice.actions;\nexport default sizesSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","apiSizes","res","fetch","data","json","insertSize","sizeName","thunkApi","rejectWithValue","method","body","JSON","stringify","headers","error","message","updateSize","id","deleteSize","console","log","sizesSlice","name","initialState","sizes","reducers","GET_SIZES","state","action","payload","ADD_SIZE","push","DELETE_SIZE","deletedSize","filter","el","_id","DELETE_RESET_SIZE","actions","reducer"],"sources":["C:/Users/MohannadDiwan/Desktop/E-commerce/diwan-shop/src/rtk/slices/sizesSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nexport const apiSizes = createAsyncThunk(\"sizesSlice/apiSizes\", async () => {\r\n  const res = await fetch(\"http://localhost:3000/sizes\");\r\n  const data = await res.json();\r\n  return data;\r\n});\r\n\r\nexport const insertSize = createAsyncThunk(\r\n  \"sizesSlice/insertSize\",\r\n  async (sizeName, thunkApi) => {\r\n    const { rejectWithValue } = thunkApi;\r\n    try {\r\n      const res = await fetch(\"http://localhost:3000/sizes\", {\r\n        method: \"POST\",\r\n\r\n        body: JSON.stringify(sizeName),\r\n\r\n        headers: { \"Content-type\": \"application/json; charset=utf-8\" },\r\n      });\r\n\r\n      const data = await res.json();\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\nexport const updateSize = createAsyncThunk(\r\n  \"sizesSlice/updateSize\",\r\n  async (sizeName, thunkApi) => {\r\n    const { rejectWithValue } = thunkApi;\r\n    try {\r\n      const res = await fetch(`http://localhost:3000/sizes/${sizeName.id}`, {\r\n        method: \"PUT\",\r\n\r\n        body: JSON.stringify(sizeName),\r\n\r\n        headers: { \"Content-type\": \"application/json; charset=utf-8\" },\r\n      });\r\n      const data = await res.json();\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\nexport const deleteSize = createAsyncThunk(\r\n  \"sizesSlice/deleteSize\",\r\n  async (sizeName, thunkApi) => {\r\n    const { rejectWithValue } = thunkApi;\r\n    console.log(sizeName);\r\n    try {\r\n      await fetch(`http://localhost:3000/sizes/${sizeName.id}`, {\r\n        method: \"DELETE\",\r\n\r\n        headers: { \"Content-type\": \"application/json; charset=utf-8\" },\r\n      });\r\n      return sizeName;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\nconst sizesSlice = createSlice({\r\n  name: \"sizesSlice\",\r\n  initialState: { sizes: [] },\r\n  reducers: {\r\n    GET_SIZES: (state, action) => {\r\n      state.sizes = action.payload;\r\n    },\r\n    ADD_SIZE: (state, action) => {\r\n      state.sizes.push(...action.payload);\r\n    },\r\n    DELETE_SIZE: (state, action) => {\r\n      state.deletedSize = true;\r\n      state.sizes.filter((el) => el._id !== action.payload);\r\n    },\r\n    DELETE_RESET_SIZE: (state, action) => {\r\n      state.deletedSize = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { GET_SIZES, ADD_SIZE, DELETE_SIZE, DELETE_RESET_SIZE } =\r\n  sizesSlice.actions;\r\nexport default sizesSlice.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}