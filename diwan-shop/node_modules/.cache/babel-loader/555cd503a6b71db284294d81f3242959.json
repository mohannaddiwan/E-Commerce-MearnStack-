{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MohannadDiwan\\\\Desktop\\\\E-Commerce\\\\diwan-shop\\\\src\\\\component\\\\add\\\\AddProduct.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import CloseButton from \"react-bootstrap/CloseButton\";\n// // import AlertMsg from \"../Alert\";\n// import { useSelector } from \"react-redux\";\n// import { useAppContext } from \"../../context/appContext\";\n// import FormRow from \"../modal/FormRow\";\n// import FormRowSelect from \"../modal/FormRowSelect\";\n// // import Wrapper from \"../../Wrapper/FormRow\";\n// import { useParams } from \"react-router-dom\";\n\n// const AddProductForm = () => {\n//   const {\n//     updateProId,\n//     isAdd,\n//     isEdit,\n//     elementState,\n//     price,\n//     selectedColorList,\n//     selectedSizeList,\n//     selectedCategories,\n//     description,\n//     name,\n//     image,\n//   } = useSelector((state) => state.products);\n//   const { sizes } = useSelector((state) => state.sizes);\n//   const { colors } = useSelector((state) => state.colors);\n//   const { categories } = useSelector((state) => state.categories);\n//   const { setForm, addItem, UpdateItem } = useAppContext();\n//   const params = useParams();\n\n//   let [data, setData] = useState({\n//     name,\n//     description,\n//     categories: selectedCategories,\n//     price,\n//     colorList: selectedColorList,\n//     sizeList: selectedSizeList,\n//     elementState,\n//     image,\n\n//     _id: updateProId || params.id,\n//   });\n//   const handleImage = (e) => {\n//     const x = e.target.files;\n//     const list = [];\n\n//     for (let i = 0; i < x.length; i++) {\n//       list.push(e.target.files[i].name);\n//     }\n\n//     setData({ ...data, image: list });\n//   };\n//   const setSize = (itemName, state) => {\n//     console.log(itemName);\n//     console.log(state);\n//     let list = [];\n//     console.log(data.sizeList);\n//     let exist = data.sizeList.find((value) => value === itemName);\n//     if (!exist) {\n//       list = data.sizeList;\n//       list.push(itemName);\n//       console.log(list);\n//       setData({ ...data, sizeList: list });\n//     } else {\n//       list = data.sizeList.filter((item) => itemName !== item);\n//       console.log(list);\n\n//       setData({ ...data, sizeList: list });\n//     }\n//   };\n//   const setColor = (itemName, state) => {\n//     let list = [];\n//     console.log(itemName);\n//     console.log(state);\n\n//     if (state) {\n//       list = data.colorList;\n//       list.push(itemName);\n//       setData({ ...data, colorList: list });\n//       console.log(data);\n//     } else {\n//       list = data.colorList.filter((item) => itemName !== item);\n//       setData({ ...data, colorList: list });\n//     }\n//   };\n//   return (\n//     <>\n//       <form\n//         className=\"editForm\"\n//         onSubmit={(e) => {\n//           if (isAdd) {\n//             return addItem(e, data);\n//           } else {\n//             return UpdateItem(e, data);\n//           }\n//         }}\n//       >\n//         {/* {showAlert && <AlertMsg alertType={alertType} alertText={alertText} />} */}\n//         <h3>{isEdit ? \"Edit Product\" : \"Add Product\"}</h3>\n//         <span className=\"delete-section\">\n//           <CloseButton\n//             onClick={() => {\n//               setForm(false);\n//             }}\n//           />\n//         </span>\n//         <FormRow\n//           type=\"text\"\n//           name=\"Name\"\n//           value={data.name}\n//           handleChange={(e) => setData({ ...data, name: e.target.value })}\n//         />\n//         <FormRow\n//           type=\"text\"\n//           name=\"Description\"\n//           value={data.description}\n//           handleChange={(e) =>\n//             setData({ ...data, description: e.target.value })\n//           }\n//         />\n//         <FormRow\n//           type=\"text\"\n//           name=\"Price\"\n//           value={data.price}\n//           handleChange={(e) => setData({ ...data, price: e.target.value })}\n//         />\n//         <FormRowSelect\n//           name=\"categories\"\n//           labelText=\"categories\"\n//           value={data.selectedCategories}\n//           handleChange={(e) => {\n//             setData({ ...data, categories: e.target.value });\n//           }}\n//           list={categories}\n//           x=\"categories\"\n//           selected={selectedCategories[0]}\n//         />\n//         {/* <FormRowSelect\n//           name=\"colors\"\n//           labelText=\"colors\"\n//           value={data.colorList}\n//           handleChange={(e) => {\n//             setData({ ...data, colorList: e.target.value });\n//           }}\n//           list={colors}\n//           x=\"colors\"\n//           selected={selectedColorList[0]}\n//         /> */}\n//         {/* <FormRowSelect\n//           name=\"sizes\"\n//           labelText=\"sizes\"\n//           value={data.categoryName}\n//           handleChange={(e) => {\n//             // setData({ ...data, sizeList: e.target.value });\n//             setSize(e.target.name, e.target.checked);\n//           }}\n//           list={sizes}\n//           x=\"sizes\"\n//           selected={selectedSizeList[0]}\n//         /> */}\n//         <h5>Sizes</h5>\n//         {sizes.map((size, index) => (\n//           <FormRow\n//             type=\"checkbox\"\n//             name={size.sizeName}\n//             // value={size.sizeName}\n//             handleChange={(e) => setSize(e.target.name, e.target.checked)}\n//             selected={selectedSizeList[0]}\n//           />\n//         ))}\n//         <h5>Colors</h5>\n//         {colors.map((color, index) => (\n//           <FormRow\n//             type=\"checkbox\"\n//             name={color.colorName}\n//             value={color.colorName}\n//             handleChange={(e) => setColor(e.target.name, e.target.checked)}\n//             selected={selectedColorList[0]}\n//           />\n//         ))}\n//         <h5>State</h5>\n//         <FormRow\n//           type=\"checkbox\"\n//           name=\"Active\"\n//           value={data.elementState}\n//           handleChange={(e) =>\n//             setData({ ...data, elementState: !data.elementState })\n//           }\n//         />\n//         <FormRow\n//           type=\"file\"\n//           name=\"Image\"\n//           handleChange={(e) => handleImage(e)}\n//         />\n//         <div className=\"d-grid\">\n//           <button type=\"submit\" className=\"btn btn-primary\">\n//             Add Product\n//           </button>\n//         </div>\n//       </form>\n//     </>\n//   );\n// };\n\n// export default AddProductForm;\nimport React, { useState } from \"react\";\nimport CloseButton from \"react-bootstrap/CloseButton\";\n// import AlertMsg from \"../Alert\";\nimport { useSelector } from \"react-redux\";\nimport { useAppContext } from \"../../context/appContext\";\nimport FormRow from \"../modal/FormRow\";\nimport FormRowSelect from \"../modal/FormRowSelect\";\n// import Wrapper from \"../../Wrapper/FormRow\";\nimport UpdateProduct from \"../update/UpdateProduct\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AddProductForm = () => {\n  _s();\n  const {\n    updateProId,\n    name,\n    description,\n    selectedCategories,\n    price,\n    colorList,\n    selectedSizeList,\n    elementState,\n    image\n  } = useSelector(state => state.products);\n  const {\n    sizes\n  } = useSelector(state => state.sizes);\n  const {\n    colors\n  } = useSelector(state => state.colors);\n  const {\n    categories\n  } = useSelector(state => state.categories);\n  const {\n    addProduct,\n    setForm\n  } = useAppContext();\n  const [data, setData] = useState({\n    name,\n    description,\n    categories,\n    price,\n    colorList,\n    sizeList: selectedSizeList,\n    elementState,\n    image\n  });\n  const handleImage = e => {\n    const x = e.target.files;\n    const list = [];\n    for (let i = 0; i < x.length; i++) {\n      list.push(e.target.files[i].name);\n    }\n    setData({\n      ...data,\n      image: list\n    });\n  };\n  const setSize = (itemName, state) => {\n    let list = [...data.sizeList];\n    if (state) {\n      list.push(itemName);\n      setData({\n        ...data,\n        sizeList: list\n      });\n    } else {\n      list = data.sizeList.filter(item => itemName !== item);\n      setData({\n        ...data,\n        sizeList: list\n      });\n    }\n  };\n  const setColor = (itemName, state) => {\n    let list = [];\n    if (state) {\n      list = data.colorList;\n      list.push(itemName);\n      setData({\n        ...data,\n        colorList: list\n      });\n    } else {\n      list = data.colorList.filter(item => itemName !== item);\n      setData({\n        ...data,\n        colorList: list\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => addProduct(e, data),\n      encType: \"multipart/form-data\",\n      className: \"editForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"delete-section\",\n        children: /*#__PURE__*/_jsxDEV(CloseButton, {\n          onClick: () => {\n            setForm(false);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormRow, {\n        type: \"text\",\n        name: \"Name\",\n        value: data.fname,\n        handleChange: e => setData({\n          ...data,\n          name: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormRow, {\n        type: \"text\",\n        name: \"Description\",\n        value: data.description,\n        handleChange: e => setData({\n          ...data,\n          description: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormRow, {\n        type: \"text\",\n        name: \"Price\",\n        value: data.price,\n        handleChange: e => setData({\n          ...data,\n          price: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormRowSelect, {\n        name: \"categories\",\n        labelText: \"categories\",\n        value: data.categoryName,\n        handleChange: e => {\n          setData({\n            ...data,\n            categories: e.target.value\n          });\n        },\n        list: categories,\n        x: \"categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mt-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Sizes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this), sizes.map(size => /*#__PURE__*/_jsxDEV(FormRow, {\n            type: \"checkbox\",\n            name: size.sizeName,\n            value: size.sizeName,\n            handleChange: e => {\n              setSize(e.target.name, e.target.checked);\n            },\n            checked: selectedSizeList.filter(i => i === size.sizeName)[0] === size.sizeName ? true : false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Colors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 13\n          }, this), colors.map(color => /*#__PURE__*/_jsxDEV(FormRow, {\n            type: \"checkbox\",\n            name: color.colorName,\n            value: color.colorName,\n            handleChange: e => {\n              setColor(e.target.name, e.target.checked);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"State\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormRow, {\n        type: \"checkbox\",\n        name: \"Active\",\n        value: data.elementState,\n        handleChange: e => setData({\n          ...data,\n          elementState: !data.elementState\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormRow, {\n        type: \"file\",\n        name: \"Image\",\n        handleChange: e => handleImage(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-grid\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Add Product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(AddProductForm, \"W0Btm60/fUOaOhEk4yFmRRgqAK8=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useAppContext];\n});\n_c = AddProductForm;\nexport default AddProductForm;\nvar _c;\n$RefreshReg$(_c, \"AddProductForm\");","map":{"version":3,"names":["React","useState","CloseButton","useSelector","useAppContext","FormRow","FormRowSelect","UpdateProduct","AddProductForm","updateProId","name","description","selectedCategories","price","colorList","selectedSizeList","elementState","image","state","products","sizes","colors","categories","addProduct","setForm","data","setData","sizeList","handleImage","e","x","target","files","list","i","length","push","setSize","itemName","filter","item","setColor","fname","value","categoryName","map","size","sizeName","checked","color","colorName"],"sources":["C:/Users/MohannadDiwan/Desktop/E-Commerce/diwan-shop/src/component/add/AddProduct.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import CloseButton from \"react-bootstrap/CloseButton\";\r\n// // import AlertMsg from \"../Alert\";\r\n// import { useSelector } from \"react-redux\";\r\n// import { useAppContext } from \"../../context/appContext\";\r\n// import FormRow from \"../modal/FormRow\";\r\n// import FormRowSelect from \"../modal/FormRowSelect\";\r\n// // import Wrapper from \"../../Wrapper/FormRow\";\r\n// import { useParams } from \"react-router-dom\";\r\n\r\n// const AddProductForm = () => {\r\n//   const {\r\n//     updateProId,\r\n//     isAdd,\r\n//     isEdit,\r\n//     elementState,\r\n//     price,\r\n//     selectedColorList,\r\n//     selectedSizeList,\r\n//     selectedCategories,\r\n//     description,\r\n//     name,\r\n//     image,\r\n//   } = useSelector((state) => state.products);\r\n//   const { sizes } = useSelector((state) => state.sizes);\r\n//   const { colors } = useSelector((state) => state.colors);\r\n//   const { categories } = useSelector((state) => state.categories);\r\n//   const { setForm, addItem, UpdateItem } = useAppContext();\r\n//   const params = useParams();\r\n\r\n//   let [data, setData] = useState({\r\n//     name,\r\n//     description,\r\n//     categories: selectedCategories,\r\n//     price,\r\n//     colorList: selectedColorList,\r\n//     sizeList: selectedSizeList,\r\n//     elementState,\r\n//     image,\r\n\r\n//     _id: updateProId || params.id,\r\n//   });\r\n//   const handleImage = (e) => {\r\n//     const x = e.target.files;\r\n//     const list = [];\r\n\r\n//     for (let i = 0; i < x.length; i++) {\r\n//       list.push(e.target.files[i].name);\r\n//     }\r\n\r\n//     setData({ ...data, image: list });\r\n//   };\r\n//   const setSize = (itemName, state) => {\r\n//     console.log(itemName);\r\n//     console.log(state);\r\n//     let list = [];\r\n//     console.log(data.sizeList);\r\n//     let exist = data.sizeList.find((value) => value === itemName);\r\n//     if (!exist) {\r\n//       list = data.sizeList;\r\n//       list.push(itemName);\r\n//       console.log(list);\r\n//       setData({ ...data, sizeList: list });\r\n//     } else {\r\n//       list = data.sizeList.filter((item) => itemName !== item);\r\n//       console.log(list);\r\n\r\n//       setData({ ...data, sizeList: list });\r\n//     }\r\n//   };\r\n//   const setColor = (itemName, state) => {\r\n//     let list = [];\r\n//     console.log(itemName);\r\n//     console.log(state);\r\n\r\n//     if (state) {\r\n//       list = data.colorList;\r\n//       list.push(itemName);\r\n//       setData({ ...data, colorList: list });\r\n//       console.log(data);\r\n//     } else {\r\n//       list = data.colorList.filter((item) => itemName !== item);\r\n//       setData({ ...data, colorList: list });\r\n//     }\r\n//   };\r\n//   return (\r\n//     <>\r\n//       <form\r\n//         className=\"editForm\"\r\n//         onSubmit={(e) => {\r\n//           if (isAdd) {\r\n//             return addItem(e, data);\r\n//           } else {\r\n//             return UpdateItem(e, data);\r\n//           }\r\n//         }}\r\n//       >\r\n//         {/* {showAlert && <AlertMsg alertType={alertType} alertText={alertText} />} */}\r\n//         <h3>{isEdit ? \"Edit Product\" : \"Add Product\"}</h3>\r\n//         <span className=\"delete-section\">\r\n//           <CloseButton\r\n//             onClick={() => {\r\n//               setForm(false);\r\n//             }}\r\n//           />\r\n//         </span>\r\n//         <FormRow\r\n//           type=\"text\"\r\n//           name=\"Name\"\r\n//           value={data.name}\r\n//           handleChange={(e) => setData({ ...data, name: e.target.value })}\r\n//         />\r\n//         <FormRow\r\n//           type=\"text\"\r\n//           name=\"Description\"\r\n//           value={data.description}\r\n//           handleChange={(e) =>\r\n//             setData({ ...data, description: e.target.value })\r\n//           }\r\n//         />\r\n//         <FormRow\r\n//           type=\"text\"\r\n//           name=\"Price\"\r\n//           value={data.price}\r\n//           handleChange={(e) => setData({ ...data, price: e.target.value })}\r\n//         />\r\n//         <FormRowSelect\r\n//           name=\"categories\"\r\n//           labelText=\"categories\"\r\n//           value={data.selectedCategories}\r\n//           handleChange={(e) => {\r\n//             setData({ ...data, categories: e.target.value });\r\n//           }}\r\n//           list={categories}\r\n//           x=\"categories\"\r\n//           selected={selectedCategories[0]}\r\n//         />\r\n//         {/* <FormRowSelect\r\n//           name=\"colors\"\r\n//           labelText=\"colors\"\r\n//           value={data.colorList}\r\n//           handleChange={(e) => {\r\n//             setData({ ...data, colorList: e.target.value });\r\n//           }}\r\n//           list={colors}\r\n//           x=\"colors\"\r\n//           selected={selectedColorList[0]}\r\n//         /> */}\r\n//         {/* <FormRowSelect\r\n//           name=\"sizes\"\r\n//           labelText=\"sizes\"\r\n//           value={data.categoryName}\r\n//           handleChange={(e) => {\r\n//             // setData({ ...data, sizeList: e.target.value });\r\n//             setSize(e.target.name, e.target.checked);\r\n//           }}\r\n//           list={sizes}\r\n//           x=\"sizes\"\r\n//           selected={selectedSizeList[0]}\r\n//         /> */}\r\n//         <h5>Sizes</h5>\r\n//         {sizes.map((size, index) => (\r\n//           <FormRow\r\n//             type=\"checkbox\"\r\n//             name={size.sizeName}\r\n//             // value={size.sizeName}\r\n//             handleChange={(e) => setSize(e.target.name, e.target.checked)}\r\n//             selected={selectedSizeList[0]}\r\n//           />\r\n//         ))}\r\n//         <h5>Colors</h5>\r\n//         {colors.map((color, index) => (\r\n//           <FormRow\r\n//             type=\"checkbox\"\r\n//             name={color.colorName}\r\n//             value={color.colorName}\r\n//             handleChange={(e) => setColor(e.target.name, e.target.checked)}\r\n//             selected={selectedColorList[0]}\r\n//           />\r\n//         ))}\r\n//         <h5>State</h5>\r\n//         <FormRow\r\n//           type=\"checkbox\"\r\n//           name=\"Active\"\r\n//           value={data.elementState}\r\n//           handleChange={(e) =>\r\n//             setData({ ...data, elementState: !data.elementState })\r\n//           }\r\n//         />\r\n//         <FormRow\r\n//           type=\"file\"\r\n//           name=\"Image\"\r\n//           handleChange={(e) => handleImage(e)}\r\n//         />\r\n//         <div className=\"d-grid\">\r\n//           <button type=\"submit\" className=\"btn btn-primary\">\r\n//             Add Product\r\n//           </button>\r\n//         </div>\r\n//       </form>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default AddProductForm;\r\nimport React, { useState } from \"react\";\r\nimport CloseButton from \"react-bootstrap/CloseButton\";\r\n// import AlertMsg from \"../Alert\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useAppContext } from \"../../context/appContext\";\r\nimport FormRow from \"../modal/FormRow\";\r\nimport FormRowSelect from \"../modal/FormRowSelect\";\r\n// import Wrapper from \"../../Wrapper/FormRow\";\r\nimport UpdateProduct from \"../update/UpdateProduct\";\r\nconst AddProductForm = () => {\r\n  const {\r\n    updateProId,\r\n    name,\r\n    description,\r\n    selectedCategories,\r\n    price,\r\n    colorList,\r\n    selectedSizeList,\r\n    elementState,\r\n    image,\r\n  } = useSelector((state) => state.products);\r\n  const { sizes } = useSelector((state) => state.sizes);\r\n  const { colors } = useSelector((state) => state.colors);\r\n  const { categories } = useSelector((state) => state.categories);\r\n  const { addProduct, setForm } = useAppContext();\r\n\r\n  const [data, setData] = useState({\r\n    name,\r\n    description,\r\n    categories,\r\n    price,\r\n    colorList,\r\n    sizeList: selectedSizeList,\r\n    elementState,\r\n    image,\r\n  });\r\n  const handleImage = (e) => {\r\n    const x = e.target.files;\r\n    const list = [];\r\n\r\n    for (let i = 0; i < x.length; i++) {\r\n      list.push(e.target.files[i].name);\r\n    }\r\n\r\n    setData({ ...data, image: list });\r\n  };\r\n  const setSize = (itemName, state) => {\r\n    let list = [...data.sizeList];\r\n    if (state) {\r\n      list.push(itemName);\r\n      setData({ ...data, sizeList: list });\r\n    } else {\r\n      list = data.sizeList.filter((item) => itemName !== item);\r\n      setData({ ...data, sizeList: list });\r\n    }\r\n  };\r\n  const setColor = (itemName, state) => {\r\n    let list = [];\r\n    if (state) {\r\n      list = data.colorList;\r\n      list.push(itemName);\r\n      setData({ ...data, colorList: list });\r\n    } else {\r\n      list = data.colorList.filter((item) => itemName !== item);\r\n      setData({ ...data, colorList: list });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* {updateProId ? (\r\n        <UpdateProduct />\r\n      ) : ( */}\r\n      <form\r\n        onSubmit={(e) => addProduct(e, data)}\r\n        encType=\"multipart/form-data\"\r\n        className=\"editForm\"\r\n      >\r\n        {/* {showAlert && <AlertMsg alertType={alertType} alertText={alertText} />} */}\r\n        <span className=\"delete-section\">\r\n          <CloseButton\r\n            onClick={() => {\r\n              setForm(false);\r\n            }}\r\n          />\r\n        </span>\r\n        <FormRow\r\n          type=\"text\"\r\n          name=\"Name\"\r\n          value={data.fname}\r\n          handleChange={(e) => setData({ ...data, name: e.target.value })}\r\n        />\r\n        <FormRow\r\n          type=\"text\"\r\n          name=\"Description\"\r\n          value={data.description}\r\n          handleChange={(e) =>\r\n            setData({ ...data, description: e.target.value })\r\n          }\r\n        />\r\n        <FormRow\r\n          type=\"text\"\r\n          name=\"Price\"\r\n          value={data.price}\r\n          handleChange={(e) => setData({ ...data, price: e.target.value })}\r\n        />\r\n        <FormRowSelect\r\n          name=\"categories\"\r\n          labelText=\"categories\"\r\n          value={data.categoryName}\r\n          handleChange={(e) => {\r\n            setData({ ...data, categories: e.target.value });\r\n          }}\r\n          list={categories}\r\n          x={\"categories\"}\r\n        />\r\n\r\n        <div className=\"row mt-2\">\r\n          <div className=\"col-md-6\">\r\n            <h5>Sizes</h5>\r\n            {sizes.map((size) => (\r\n              <FormRow\r\n                type=\"checkbox\"\r\n                name={size.sizeName}\r\n                value={size.sizeName}\r\n                handleChange={(e) => {\r\n                  setSize(e.target.name, e.target.checked);\r\n                }}\r\n                checked={\r\n                  selectedSizeList.filter((i) => i === size.sizeName)[0] ===\r\n                  size.sizeName\r\n                    ? true\r\n                    : false\r\n                }\r\n              />\r\n            ))}\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            {\" \"}\r\n            <h5>Colors</h5>\r\n            {colors.map((color) => (\r\n              <FormRow\r\n                type=\"checkbox\"\r\n                name={color.colorName}\r\n                value={color.colorName}\r\n                handleChange={(e) => {\r\n                  setColor(e.target.name, e.target.checked);\r\n                }}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <h5>State</h5>\r\n        <FormRow\r\n          type=\"checkbox\"\r\n          name=\"Active\"\r\n          value={data.elementState}\r\n          handleChange={(e) =>\r\n            setData({ ...data, elementState: !data.elementState })\r\n          }\r\n        />\r\n        <FormRow\r\n          type=\"file\"\r\n          name=\"Image\"\r\n          handleChange={(e) => handleImage(e)}\r\n        />\r\n\r\n        <div className=\"d-grid\">\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Add Product\r\n          </button>\r\n        </div>\r\n      </form>\r\n      {/* )} */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddProductForm;\r\n"],"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"},"metadata":{},"sourceType":"module"}