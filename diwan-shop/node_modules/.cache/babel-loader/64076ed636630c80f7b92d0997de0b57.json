{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nconst categoriesSlice = createSlice({\n  name: \"categoriesSlice\",\n  initialState: {\n    categories: []\n  },\n  reducers: {\n    ADD_Category: (state, action) => {\n      state.categories = action.payload;\n    }\n    // extraReducers: (builder) => {\n    //   builder.addCase(apiCategories.fulfilled, (state, action) => {\n    //     return action.payload;\n    //   });\n    //   builder.addCase(insertCategory.fulfilled, (state, action) => {\n    //     state.push(action.payload);\n    //   });\n    //   builder.addCase(deleteCat.fulfilled, (state, action) => {\n    //     return (state = state.filter(\n    //       (category) => category.id !== action.payload.id\n    //     ));\n    //   });\n\n    //   builder.addCase(updateCat.fulfilled, (state, action) => {\n    //     const { id, categoryName, elementState } = action.payload;\n    //     const updateState = state.find((category) => category.id === id);\n    //     console.log(action.payload.img);\n    //     if (updateState) {\n    //       updateState.categoryName = categoryName;\n    //       updateState.elementState = elementState;\n\n    //       // updateState.img = img;\n    //     }\n    //   });\n  }\n});\n\nexport const {\n  ADD_Category\n} = categoriesSlice.actions;\nexport default categoriesSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","categoriesSlice","name","initialState","categories","reducers","ADD_Category","state","action","payload","actions","reducer"],"sources":["C:/Users/MohannadDiwan/Desktop/E-commerce/diwan-shop/src/rtk/slices/categoriesSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\nconst categoriesSlice = createSlice({\r\n  name: \"categoriesSlice\",\r\n  initialState: { categories: [] },\r\n  reducers: {\r\n    ADD_Category: (state, action) => {\r\n      state.categories = action.payload;\r\n    },\r\n    // extraReducers: (builder) => {\r\n    //   builder.addCase(apiCategories.fulfilled, (state, action) => {\r\n    //     return action.payload;\r\n    //   });\r\n    //   builder.addCase(insertCategory.fulfilled, (state, action) => {\r\n    //     state.push(action.payload);\r\n    //   });\r\n    //   builder.addCase(deleteCat.fulfilled, (state, action) => {\r\n    //     return (state = state.filter(\r\n    //       (category) => category.id !== action.payload.id\r\n    //     ));\r\n    //   });\r\n\r\n    //   builder.addCase(updateCat.fulfilled, (state, action) => {\r\n    //     const { id, categoryName, elementState } = action.payload;\r\n    //     const updateState = state.find((category) => category.id === id);\r\n    //     console.log(action.payload.img);\r\n    //     if (updateState) {\r\n    //       updateState.categoryName = categoryName;\r\n    //       updateState.elementState = elementState;\r\n\r\n    //       // updateState.img = img;\r\n    //     }\r\n    //   });\r\n  },\r\n});\r\n\r\nexport const { ADD_Category } = categoriesSlice.actions;\r\nexport default categoriesSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAEhE,MAAMC,eAAe,GAAGF,WAAW,CAAC;EAClCG,IAAI,EAAE,iBAAiB;EACvBC,YAAY,EAAE;IAAEC,UAAU,EAAE;EAAG,CAAC;EAChCC,QAAQ,EAAE;IACRC,YAAY,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC/BD,KAAK,CAACH,UAAU,GAAGI,MAAM,CAACC,OAAO;IACnC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;EACF;AACF,CAAC,CAAC;;AAEF,OAAO,MAAM;EAAEH;AAAa,CAAC,GAAGL,eAAe,CAACS,OAAO;AACvD,eAAeT,eAAe,CAACU,OAAO"},"metadata":{},"sourceType":"module"}