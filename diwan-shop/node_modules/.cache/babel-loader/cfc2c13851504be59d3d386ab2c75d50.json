{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MohannadDiwan\\\\Desktop\\\\E-commerce\\\\diwan-shop\\\\src\\\\component\\\\registrtScreen.js\\\\RegisterScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Input from \"./Input\";\nimport usersApi from \"../../api/usersApi\";\n// import { toast } from \"react-toastify\";\n// import authApi from \"../api/auth\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RegisterScreen(props) {\n  _s();\n  const [data, setData] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const handleSubmit = async e => {\n    e.preventDefault();\n    // try {\n    //   const { data: token } = await usersApi.createUser(data);\n    //   //   authApi.setToken(token);\n    //   console.log(token);\n    //   window.location = \"/\";\n    // } catch (err) {\n    //   if (\n    //     err.response &&\n    //     err.response.status >= 400 &&\n    //     err.response.status < 500\n    //   )\n    //     alert(err.response.data);\n    // }\n    const post = createAsyncThunk(\"categoriesSlice/deleteCat\", async (categoryData, thunkApi) => {\n      const {\n        rejectWithValue\n      } = thunkApi;\n      console.log(categoryData);\n      try {\n        await fetch(`http://localhost:5000/api/users`, {\n          method: \"POST\",\n          headers: {\n            \"Content-type\": \"application/json; charset=utf-8\"\n          }\n        });\n        return categoryData;\n      } catch (err) {\n        alert(rejectWithValue);\n        console.log(err);\n      }\n    });\n  };\n  const handleChange = _ref => {\n    let {\n      target\n    } = _ref;\n    return setData({\n      ...data,\n      [target.name]: target.value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        id: \"username\",\n        handleChange: handleChange,\n        value: data.username,\n        label: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"password\",\n        id: \"password\",\n        handleChange: handleChange,\n        value: data.value,\n        label: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-success\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(RegisterScreen, \"pObuPPmlfEV29Mu+MggddAE32iQ=\");\n_c = RegisterScreen;\nexport default RegisterScreen;\nvar _c;\n$RefreshReg$(_c, \"RegisterScreen\");","map":{"version":3,"names":["React","useState","Input","usersApi","createAsyncThunk","RegisterScreen","props","data","setData","username","password","handleSubmit","e","preventDefault","post","categoryData","thunkApi","rejectWithValue","console","log","fetch","method","headers","err","alert","handleChange","target","name","value"],"sources":["C:/Users/MohannadDiwan/Desktop/E-commerce/diwan-shop/src/component/registrtScreen.js/RegisterScreen.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Input from \"./Input\";\r\nimport usersApi from \"../../api/usersApi\";\r\n// import { toast } from \"react-toastify\";\r\n// import authApi from \"../api/auth\";\r\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\nfunction RegisterScreen(props) {\r\n  const [data, setData] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // try {\r\n    //   const { data: token } = await usersApi.createUser(data);\r\n    //   //   authApi.setToken(token);\r\n    //   console.log(token);\r\n    //   window.location = \"/\";\r\n    // } catch (err) {\r\n    //   if (\r\n    //     err.response &&\r\n    //     err.response.status >= 400 &&\r\n    //     err.response.status < 500\r\n    //   )\r\n    //     alert(err.response.data);\r\n    // }\r\n    const post = createAsyncThunk(\r\n      \"categoriesSlice/deleteCat\",\r\n      async (categoryData, thunkApi) => {\r\n        const { rejectWithValue } = thunkApi;\r\n        console.log(categoryData);\r\n        try {\r\n          await fetch(`http://localhost:5000/api/users`, {\r\n            method: \"POST\",\r\n\r\n            headers: { \"Content-type\": \"application/json; charset=utf-8\" },\r\n          });\r\n          return categoryData;\r\n        } catch (err) {\r\n          alert(rejectWithValue);\r\n          console.log(err);\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  const handleChange = ({ target }) =>\r\n    setData({ ...data, [target.name]: target.value });\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Register</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <Input\r\n          id=\"username\"\r\n          handleChange={handleChange}\r\n          value={data.username}\r\n          label=\"Username\"\r\n        />\r\n        <Input\r\n          type=\"password\"\r\n          id=\"password\"\r\n          handleChange={handleChange}\r\n          value={data.value}\r\n          label=\"Password\"\r\n        />\r\n        <button type=\"submit\" className=\"btn btn-success\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegisterScreen;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,QAAQ,MAAM,oBAAoB;AACzC;AACA;AACA,SAASC,gBAAgB,QAAQ,kBAAkB;AAAC;AAEpD,SAASC,cAAc,CAACC,KAAK,EAAE;EAAA;EAC7B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC;IAC/BQ,QAAQ,EAAE,EAAE;IACZC,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,EAAE;IAClB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,MAAMC,IAAI,GAAGV,gBAAgB,CAC3B,2BAA2B,EAC3B,OAAOW,YAAY,EAAEC,QAAQ,KAAK;MAChC,MAAM;QAAEC;MAAgB,CAAC,GAAGD,QAAQ;MACpCE,OAAO,CAACC,GAAG,CAACJ,YAAY,CAAC;MACzB,IAAI;QACF,MAAMK,KAAK,CAAE,iCAAgC,EAAE;UAC7CC,MAAM,EAAE,MAAM;UAEdC,OAAO,EAAE;YAAE,cAAc,EAAE;UAAkC;QAC/D,CAAC,CAAC;QACF,OAAOP,YAAY;MACrB,CAAC,CAAC,OAAOQ,GAAG,EAAE;QACZC,KAAK,CAACP,eAAe,CAAC;QACtBC,OAAO,CAACC,GAAG,CAACI,GAAG,CAAC;MAClB;IACF,CAAC,CACF;EACH,CAAC;EAED,MAAME,YAAY,GAAG;IAAA,IAAC;MAAEC;IAAO,CAAC;IAAA,OAC9BlB,OAAO,CAAC;MAAE,GAAGD,IAAI;MAAE,CAACmB,MAAM,CAACC,IAAI,GAAGD,MAAM,CAACE;IAAM,CAAC,CAAC;EAAA;EAEnD,oBACE;IAAK,SAAS,EAAC,WAAW;IAAA,wBACxB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAiB,eACjB;MAAM,QAAQ,EAAEjB,YAAa;MAAA,wBAC3B,QAAC,KAAK;QACJ,EAAE,EAAC,UAAU;QACb,YAAY,EAAEc,YAAa;QAC3B,KAAK,EAAElB,IAAI,CAACE,QAAS;QACrB,KAAK,EAAC;MAAU;QAAA;QAAA;QAAA;MAAA,QAChB,eACF,QAAC,KAAK;QACJ,IAAI,EAAC,UAAU;QACf,EAAE,EAAC,UAAU;QACb,YAAY,EAAEgB,YAAa;QAC3B,KAAK,EAAElB,IAAI,CAACqB,KAAM;QAClB,KAAK,EAAC;MAAU;QAAA;QAAA;QAAA;MAAA,QAChB,eACF;QAAQ,IAAI,EAAC,QAAQ;QAAC,SAAS,EAAC,iBAAiB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAExC;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAEV;AAAC,GAnEQvB,cAAc;AAAA,KAAdA,cAAc;AAqEvB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module"}