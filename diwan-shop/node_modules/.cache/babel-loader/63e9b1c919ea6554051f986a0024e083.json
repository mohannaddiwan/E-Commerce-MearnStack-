{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MohannadDiwan\\\\Desktop\\\\E-commerce\\\\diwan-shop\\\\src\\\\component\\\\UpdateProduct.js\",\n  _s = $RefreshSig$();\nimport Button from \"react-bootstrap/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport Form from \"react-bootstrap/Form\";\nimport { useEffect, useState } from \"react\";\nimport { update } from \"../rtk/slices/productsSlice\";\nimport ReactDOM from \"react-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction UpdatePro(_ref) {\n  _s();\n  let {\n    updateForm,\n    setUpdate,\n    id\n  } = _ref;\n  const dispatch = useDispatch();\n  const params = useParams();\n  const navigate = useNavigate();\n  // console.log(params.id);\n  const {\n    products\n  } = useSelector(state => state.products);\n  const selectedProduct = products.filter(user => user.id.toString() === params.id.toString());\n  let {\n    productName,\n    category,\n    price,\n    img\n  } = selectedProduct[0];\n  console.log(productName);\n  const [value, setValue] = useState({\n    productName,\n    price,\n    category,\n    img\n  });\n  console.log(value);\n  const z = () => {\n    setValue({\n      productName: productName,\n      price: price,\n      category: category,\n      img: img\n    });\n  };\n  const HandleUpdate = () => {\n    dispatch(update({\n      id: params.id,\n      productName: value.productName,\n      price: value.price,\n      category: value.category,\n      img: \"./img/\" + value.img.slice(12)\n    }));\n    navigate(`/Dashboard/MangeProducts/Update/${params.id}`);\n  };\n  const Overlay = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"overlay\",\n    onClick: () => {\n      setUpdate(false);\n      z();\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n  const BackDrop = _ref2 => {\n    let {\n      children\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editForm\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 38\n    }, this);\n  };\n  return updateForm && /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Overlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(BackDrop, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formBasicEmail\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"ProductName\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: value.productName,\n                onChange: e => setValue({\n                  ...value,\n                  productName: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formBasicEmail\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"quantityPerUnit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: value.price,\n                onChange: e => setValue({\n                  ...value,\n                  price: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formBasicEmail\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"unitPrice\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: value.category,\n                onChange: e => setValue({\n                  ...value,\n                  category: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formBasicEmail\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"unitPrice\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"file\",\n                onChange: e => setValue({\n                  ...value,\n                  img: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: () => HandleUpdate(),\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), document.getElementById(\"modal\"))\n  }, void 0, false);\n}\n_s(UpdatePro, \"WhiZUPFGUqCjYP0fAnq9nZ9L9eo=\", false, function () {\n  return [useDispatch, useParams, useNavigate, useSelector];\n});\n_c = UpdatePro;\nexport default UpdatePro;\nvar _c;\n$RefreshReg$(_c, \"UpdatePro\");","map":{"version":3,"names":["Button","useSelector","useDispatch","useParams","useNavigate","Form","useEffect","useState","update","ReactDOM","UpdatePro","updateForm","setUpdate","id","dispatch","params","navigate","products","state","selectedProduct","filter","user","toString","productName","category","price","img","console","log","value","setValue","z","HandleUpdate","slice","Overlay","BackDrop","children","createPortal","e","target","document","getElementById"],"sources":["C:/Users/MohannadDiwan/Desktop/E-commerce/diwan-shop/src/component/UpdateProduct.js"],"sourcesContent":["import Button from \"react-bootstrap/Button\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { update } from \"../rtk/slices/productsSlice\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nfunction UpdatePro({ updateForm, setUpdate, id }) {\r\n  const dispatch = useDispatch();\r\n  const params = useParams();\r\n  const navigate = useNavigate();\r\n  // console.log(params.id);\r\n  const { products } = useSelector((state) => state.products);\r\n\r\n  const selectedProduct = products.filter(\r\n    (user) => user.id.toString() === params.id.toString()\r\n  );\r\n  let { productName, category, price, img } = selectedProduct[0];\r\n\r\n  console.log(productName);\r\n\r\n  const [value, setValue] = useState({\r\n    productName,\r\n    price,\r\n    category,\r\n    img,\r\n  });\r\n  console.log(value);\r\n  const z = () => {\r\n    setValue({\r\n      productName: productName,\r\n      price: price,\r\n      category: category,\r\n      img: img,\r\n    });\r\n  };\r\n\r\n  const HandleUpdate = () => {\r\n    dispatch(\r\n      update({\r\n        id: params.id,\r\n        productName: value.productName,\r\n        price: value.price,\r\n        category: value.category,\r\n        img: \"./img/\" + value.img.slice(12),\r\n      })\r\n    );\r\n\r\n    navigate(`/Dashboard/MangeProducts/Update/${params.id}`);\r\n  };\r\n  const Overlay = () => (\r\n    <div\r\n      className=\"overlay\"\r\n      onClick={() => {\r\n        setUpdate(false);\r\n        z();\r\n      }}\r\n    ></div>\r\n  );\r\n  const BackDrop = ({ children }) => <div className=\"editForm\">{children}</div>;\r\n  return (\r\n    updateForm && (\r\n      <>\r\n        {ReactDOM.createPortal(\r\n          <>\r\n            <Overlay />\r\n            <BackDrop>\r\n              <div>\r\n                <Form>\r\n                  <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                    <Form.Label>ProductName</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      value={value.productName}\r\n                      onChange={(e) =>\r\n                        setValue({ ...value, productName: e.target.value })\r\n                      }\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                    <Form.Label>quantityPerUnit</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      value={value.price}\r\n                      onChange={(e) =>\r\n                        setValue({ ...value, price: e.target.value })\r\n                      }\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                    <Form.Label>unitPrice</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      value={value.category}\r\n                      onChange={(e) =>\r\n                        setValue({ ...value, category: e.target.value })\r\n                      }\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                    <Form.Label>unitPrice</Form.Label>\r\n                    <Form.Control\r\n                      type=\"file\"\r\n                      onChange={(e) =>\r\n                        setValue({ ...value, img: e.target.value })\r\n                      }\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  <Button variant=\"primary\" onClick={() => HandleUpdate()}>\r\n                    Submit\r\n                  </Button>\r\n                </Form>\r\n              </div>\r\n            </BackDrop>\r\n          </>,\r\n          document.getElementById(\"modal\")\r\n        )}\r\n      </>\r\n    )\r\n  );\r\n}\r\n\r\nexport default UpdatePro;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}